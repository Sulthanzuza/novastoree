<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<link rel="stylesheet" href="/otp.css">
<title>{{title}}</title>
{{> header}}

<div class="login">
    <div class="text-center mb-4">OTP</div>
    <div class="form-section d-flex justify-content-center align-items-center">
        <div class="login-container">
            <form id="otp-form" action="/verify-otp" method="POST">
                <div class="mb-3">
                    <div class="text-container text_center">
                        <p>An automated email has been sent to your email. Please enter your verification code.</p>
                    </div>
                    <input type="text" class="form-control" name="otp" id="otp" placeholder="Enter OTP" required>
                </div>
                <div id="error-message" class="text-danger text-center mb-3"></div>
                <div class="btnn">
                    <button type="submit" class="btn btn-dark w-100">Verify OTP</button>
                </div>
            </form>
            <div class="btnn1">
                <button type="button" id="resendOtpButton" class="btn btn-dark w-100" disabled>Resend OTP in 45 seconds</button>
            </div>
        </div>
    </div>
</div>

{{> footer}}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>


<script>
    
let resendTimer = 45;
const resendOtpButton = document.getElementById('resendOtpButton');
const validateOtpButton = document.getElementById('validateOtpButton');
const otpInput = document.getElementById('otp'); 
let countdownInterval;


function startCountdown() {
    resendOtpButton.disabled = true;
    countdownInterval = setInterval(function () {
        if (resendTimer > 0) {
            resendOtpButton.textContent = `Resend OTP in ${resendTimer--} seconds`;
        } else {
            resendOtpButton.disabled = false;
            resendOtpButton.textContent = 'Resend OTP';
            clearInterval(countdownInterval);
        }
    }, 1000);
}
startCountdown();



document.getElementById('otp-form').addEventListener('submit', async function (event) {
    event.preventDefault();

    const otp = this.otp.value;

    const submitButton = this.querySelector('button[type="submit"]');
    submitButton.disabled = true;
    submitButton.innerHTML = 'Verifying...';

    try {
        const response = await fetch('/verify-otp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ otp })
        });

        const result = await response.json();

        submitButton.disabled = false;
        submitButton.innerHTML = 'Verify OTP';

        if (response.ok && result.success) {
            Swal.fire({
                title: 'Success!',
                text: result.message,
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = '/login';
            });
        } else {
            Swal.fire({
                title: 'Error!',
                text: result.message,
                icon: 'error',
                confirmButtonText: 'Try Again'
            });
        }
    } catch (error) {
        submitButton.disabled = false;
        submitButton.innerHTML = 'Verify OTP';

        Swal.fire({
            title: 'Error!',
            text: 'Something went wrong. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
});

async function handleResendOtp() {
    resendOtpButton.disabled = true;
    resendOtpButton.textContent = 'Sending OTP...';

    const response = await fetch('/verify-otp/resend', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    });

    const result = await response.json();

    if (result.success) {
        resendTimer = 45;
        startCountdown();
        Swal.fire({
            title: 'Success!',
            text: result.message,
            icon: 'success',
            confirmButtonText: 'OK'
        });
    } else {
        resendOtpButton.disabled = false;
        resendOtpButton.textContent = 'Resend OTP';
        Swal.fire({
            title: 'Error!',
            text: result.message,
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}


async function validateOtp() {
    const otpValue = otpInput.value.trim();
    if (!otpValue) {
        Swal.fire({
            title: 'Error!',
            text: 'Please enter the OTP.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        return;
    }

    const response = await fetch('/verify-otp', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ otp: otpValue })
    });

    const result = await response.json();

    if (result.success) {
        Swal.fire({
            title: 'Success!',
            text: result.message,
            icon: 'success',
            confirmButtonText: 'OK'
        });
        clearInterval(countdownInterval);
        resendOtpButton.disabled = true;
        resendOtpButton.textContent = 'OTP Verified';
    } else {
        Swal.fire({
            title: 'Error!',
            text: result.message,
            icon: 'error',
            confirmButtonText: 'OK'
        });
       
    }
}


function checkOtpExpiry() {
    let otpExpiryTime = 5 * 60 * 1000; 
    let otpSentTime = Date.parse('{{otpCreatedAt}}'); 
    let timeLeft = otpExpiryTime - (Date.now() - otpSentTime);

    if (timeLeft <= 0) {
        resendOtpButton.disabled = false;
        resendOtpButton.textContent = 'Resend OTP';
        Swal.fire('Your OTP has expired. Please request a new OTP.');
    } else {
        startCountdown();
    }
}


checkOtpExpiry();
resendOtpButton.addEventListener('click', handleResendOtp);
validateOtpButton.addEventListener('click', validateOtp);
</script>


